	LDS# $E00	; load stack pointer
	LDA# $001	; load 1
	STA  fib	; initialize fib
	STA  fib1	; initialize fib1
	STA  fib2	; initialize fib2
	LDA# $002	; load 2
	STA  i	; initialize i
	JSR  $E01	; read in num
	STA  num	; store in num
	CMA# $002	; compare to 2
	JGT  JUMP	; jump if greater
DONE:	LDA  fib	; load fib
	JSR  $E00	; print fib
	HLT		; end
JUMP:	LDA  fib1	; load fib1
	ADA  fib2	; fib1 + fib2
	STA  fib	; store in fib
	LDA  fib1	; load fib1
	STA  fib2	; fib2 = fib1
	LDA  fib	; load fib
	STA  fib1	; fib1 = fib
	INC  i	; increment i
	LDA  i	; load i
	CMA  num	; check if i < num
	JLT  JUMP	; if yes, jump to (jump here)
	JMP  DONE	; jump to end
num:	.word		; num
fib:	.word		; fib
fib1:	.word		; fib1
fib2:	.word		; fib2
i:	.word		; i