	.EQU 	@, $0
	.EQU	len, $A00	;Length of array
	.EQU 	arr, $A01	;Beginning of array
	LDS#	$E00
	PSH 	len
	PSH# 	Array
	PSH# 	arr
	JSR 	Copy	
	ADS# 	3
	PSH 	len
	PSH# 	Array
	JSR 	Sort
	ADS# 	2

PromptLoop:	PSH#	PromptLength	;Print prompt continuously 
	PSH# 	Prompt
	JSR 	$E05
	ADS# 	2
	JSR 	$E01	
	PSHA	
	PSH	len
	PSH#	Array
	JSR 	Find
	ADS# 	3
	PSH# 	ResultLength	
	PSH# 	Result
	JSR 	$E05
	ADS# 	2
	JSR	$E00
	PSH# 	ContinuePromptLength
	PSH# 	Continue
	JSR	$E05
	ADS# 	2
	JSR 	$E01
	CMA# 	1
	JEQ 	PromptLoop
	HLT	
Array: 	.BLKW	250
Prompt:	.CHAR 'Enter Data', PromptLength
Result:	.CHAR 'Index: ', ResultLength
Continue:	.CHAR 'Want to continue? (1=yes, 0=no)', ContinuePromptLength

;Find subroutine:	int find(int arg[], int arlen, int key)
	.EQU 	low, 0	
	.EQU	high, 1	
	.EQU 	arg, 4	
	.EQU 	arlen, 5	
	.EQU 	key, 6	
Find:	BGN# 	2
	CLR  !	low	
	LDA  !	arlen
	SBA# 	1		
	STA  !	high	
Loop4:	CMA  !	low	
	JLT 	NotFound
	ADA  !	low	
	DIV#	2	
	TAX		
	LDA  !	key	
	CMA& !	arg
	TXA	
	JGT 	greater	
	JLT 	smaller
	JMP 	Done			
Greater:	ADA# 	1
	STA  !	low	
	LDA  !	high
	JMP 	Loop4
Smaller:	SBA# 	1
	STA  !	high	
	JMP 	Loop4
NotFound:	LDA# 	1
	NEGA		

;Sort subroutine:	void sort(int ar[], int arrlen)
	.EQU 	index, 0
	.EQU 	temp, 1
	.EQU 	ar, 4
	.EQU 	arrlen, 5
Sort:	BGN# 	2
	LDA# 	1
	STA  !	index
Loop2:	CMA  !	arrlen
	JEQ 	Done
	STA  !	index
	TAX	
	LDA& !	ar	
	STA  !	temp
Loop3:	SBX# 	1
	CMX# 	0
	JLT	Increment
	CMA& !	ar
	JGT	Increment
	LDA& !	ar	
	ADX# 	1
	STA& !	ar
	SBX# 	1
	LDA  !	temp
	JMP 	Loop3
Increment:	ADX# 	1	
	LDA  !	temp
	STA& !	ar
	LDA  !	index
	ADA# 	1
	JMP 	Loop2

;Copy subroutine:	void copy(int orig[], int dest[], int length)
	.EQU 	orig, 2	; first parameter
	.EQU 	dest, 3	; second parameter
	.EQU 	length, 4	; third parameter
Copy:	BGN# 	0
	LDX  !	length
	SBX# 	1	
Loop:	LDA& !	orig
	STA& !	dest
	SOJ	Loop
	FIN# 	0
	RTN

Done:	FIN# 2
	RTN
