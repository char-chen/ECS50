	LDS# 	$E00	;Load stack pointer to $E00
	PSH# 	PROMPT_LENGTH	;Prints prompt
	PSH# 	PROMPT
	JSR 	$E05	;Print
	ADS#	2
	JSR	$E01	;Reads input
	STA	NUM	;Store to num
	LDA#  0
	STA   I
LOOP:	LDA 	NUM	;Load to ACC
	SHLA		;Shift bits to left
	JOV	OV	;Jump if overflow
	STA   NUM
	LDX#  0
	LDC   BINARY
	LDA# 	'0'	;Move 0 to ACC
	STC   BINARY	;puts in binary
	PSH#  BINARY_LENGTH
	PSH#  BINARY
	JSR	$E05	;Print
	ADS#  2
JUMP:	INC 	I	;Increment counter
	LDA	I	;
	CMA#	$018	;Compare to 24
	JNE	LOOP	;
	JMP	DONE	;
DONE:	JSR	$E06	;Print newline
	HLT
OV:	STA   NUM
	LDX#  0
	LDC   BINARY
	LDA#	'1'
	STC   BINARY
	PSH#  BINARY_LENGTH
	PSH#  BINARY
	JSR   $E05
	ADS#  2
	JMP   JUMP
NUM:	.WORD 
BINARY:	.CHAR '0', BINARY_LENGTH
I:	.WORD
PROMPT: 	.CHAR 'Enter number (0=quit)', PROMPT_LENGTH