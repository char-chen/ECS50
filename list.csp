	LDS# $E00	; load stack pointer at $E00
	NOP
	JSR  $E01	; jump to subroutine $E00 aka GET_NUM
	STA  $021	; store critical value
Loop:	NOP
	JSR  $E01	; read in value
	CMA# $000	; compares value to 0
	JLE  $01D	; if <= 0 
	STA  $022	; store value somewhere else
Loop2:	NOP
	JSR  $E01	; read in num
	DEC  $022	; decrement value
	CMA  $021	; compare to critical value
	JLT  $014	; jump to increment less
	INC  $024	; increment greater
	NOP
	LDX  $022	; load value in XR
	CMX# $000	; check if value > 0
	JLE  $017	; if no, jump to end
	JMP  $009	; if yes, jump to beginning of loop
	NOP
	INC  $023	; increment less
	JMP  $00F	; jump to check value > 0
	NOP
	LDA  $023	
	JSR  $E00	; print less
	LDA  $024
	JSR  $E00	; print greater
	HLT
	NOP
	LDA# $000	; NARNIA
	JSR  $E00	; print 0
	JMP  $004
	NOP		; critical value
	NOP		; value
Less: 	.WORD	0
Greater: 	.WORD	0







